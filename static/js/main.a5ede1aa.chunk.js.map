{"version":3,"sources":["components/ContactList/ContactList.module.css","redux/phonebook-actions.js","redux/phonebook-selector.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/phonebook-reducer.js","redux/store.js","reportWebVitals.js","index.js","components/styles/Input.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","getContacts","state","phonebook","contacts","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","checkContact","some","contact","alert","newContact","actions","reset","onSubmit","preventDefault","className","s","Form","Label","type","onChange","Input","ContactList","List","map","Item","Text","onClick","onDeleteContact","Filter","event","App","length","createReducer","_","action","initialContacts","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","reducers","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a5ede1aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__206Xm\",\"Item\":\"ContactList_Item__2zI_R\",\"Text\":\"ContactList_Text__1jiiw\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('phonebook/AddContact', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\nconst deleteContact = createAction('phonebook/DeleteContact');\nconst changeFilter = createAction('phonebook/ChangeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","export const getContacts = state => state.phonebook.contacts;\nexport const getFilter = state => state.phonebook.filter;\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/phonebook-actions';\nimport { getContacts } from '../../redux/phonebook-selector';\nimport s from '../styles/Input.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (e.currentTarget.name === 'name') {\n      setName(e.currentTarget.value);\n    } else if (e.currentTarget.name === 'number') {\n      setNumber(e.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    checkContact(name, number);\n    reset();\n  };\n\n  const checkContact = (name, number) => {\n    const isNameInContact = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isNameInContact) {\n      alert(`${name} is already in contact`);\n    } else if (name !== '' || number !== '') {\n      const newContact = {\n        name,\n        number,\n      };\n      dispatch(actions.addContact(newContact));\n    }\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={s.Form}>\n      <label className={s.Label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          className={s.Input}\n        />\n      </label>\n      <label className={s.Label}>\n        Number\n        <input\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.Input}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/phonebook-actions';\nimport { getVisibleContacts } from '../../redux/phonebook-selector';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul className={s.List}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.Item}>\n          <p className={s.Text}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => {\n              onDeleteContact(id);\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.number.isRequired,\n//     }),\n//   ).isRequired,\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from '../../redux/phonebook-actions';\nimport { getFilter } from '../../redux/phonebook-selector';\nimport s from '../styles/Input.module.css';\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = event =>\n    dispatch(actions.changeFilter(event.currentTarget.value));\n  return (\n    <label className={s.Label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={s.Input}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import { useSelector } from 'react-redux';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport { getContacts } from '../redux/phonebook-selector';\n\nfunction App() {\n  const contacts = useSelector(getContacts);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {contacts.length > 0 ? <Filter /> : <p>Your phonebook is empty</p>}\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from '../redux/phonebook-actions';\nimport initialContacts from '../initialContacts.json';\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\nconst contacts = createReducer(initialContacts, {\n  [actions.addContact]: (state, { payload }) => {\n    return [...state, payload];\n  },\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport reducers from './phonebook-reducer';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    phonebook: persistReducer(phonebookPersistConfig, reducers),\n  },\n  // reducer: {\n  //   filter: filterReducer,\n  //   contacts: contactsReducer,\n  // },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n// export default { store };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Input_Form__reIqy\",\"Label\":\"Input_Label__2TvnQ\",\"Input\":\"Input_Input__-42W0\"};"],"sourceRoot":""}